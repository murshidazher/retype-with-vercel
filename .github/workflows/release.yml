name: Auto-release on PR merge

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    outputs:
      auto-version: ${{ steps.auto-version.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download latest auto
        run: |
          auto_download_url="$(curl -fsSL https://api.github.com/repos/intuit/auto/releases/latest | jq -r '.assets[] | select(.name == "auto-linux.gz") | .browser_download_url')"
          wget -O- "$auto_download_url" | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Check whether a release is due
        id: auto-version
        run: |
          version="$(~/auto version)"
          echo "::set-output name=version::$version"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        run: ~/auto shipit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-and-push-retype:
    runs-on: ubuntu-latest
    needs: auto-release
    if: needs.auto-release.outputs.auto-version != ''
    steps:
      - name: Get tag of latest release
        id: latest-release
        run: |
          latest_tag="$(curl -fsSL https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq -r .tag_name)"
          echo "::set-output name=tag::$latest_tag"

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.latest-release.outputs.tag }}
          fetch-depth: 0

      - name: Update the retype yml file
        run: |
          version=$(grep -A2 'branding:' retype.yml | tail -n1); version=${version//*label: /}; echo "$version"; sed -i "s/$version/${{ steps.latest-release.outputs.tag }}/g" retype.yml;

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          git add retype.yml
          git commit -m ":wrench: chore:Bump retype version to ${{ steps.latest-release.outputs.tag }} [skip ci]"
          git push origin master
