name: Auto-release on PR merge

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    outputs:
      auto-version: ${{ steps.auto-version.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Download latest deps and auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install -g auto
          npm i

      - name: Check whether a release is due
        id: auto-version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="$(auto version)"
          echo "::set-output name=version::$version"

      # - name: Check release tag
      #   id: create-label
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npm run release:tag

      - name: Create release ship
        id: create-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release:ship

  update-and-push-retype:
    runs-on: ubuntu-latest
    needs: auto-release
    if: needs.auto-release.outputs.auto-version != ''
    steps:
      - name: Get tag of latest release
        id: latest-release
        run: |
          latest_tag="$(curl -fsSL https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq -r .tag_name)"
          echo "::set-output name=tag::$latest_tag"

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.latest-release.outputs.tag }}
          fetch-depth: 0

      - name: setup git config
        run: |
          git config user.name "github-actions"
          git config user.email "27856297+dependabot-preview[bot]@users.noreply.github.com"

      - name: Get updated version of the Source
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://github.com/murshidazher/retype-with-vercel.git
          git remote -v
          git status
          git pull --rebase origin main

      - name: Update the CHANGELOG file
        run: |
          # remove the changelog header and reformat md
          perl -0777 -i -pe 's/# Changelog\n\n//gs' CHANGELOG.md
          perl -0777 -i -pe 's/---\nlabel: Changelog\nicon: versions\n---\n//igs' CHANGELOG.md
          perl -0777 -i -pe 's/####/###/gs' CHANGELOG.md
          perl -0777 -i -pe 's/# v/## v/gs' CHANGELOG.md
          # add the file index to the top
          sed -i '1s/^/---\nlabel: Changelog\nicon: versions\n---\n# Changelog\n\n/' CHANGELOG.md

      - name: Commit CHANGELOG reformat
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add -A
          git commit -m ":art: style: reformat CHANGELOG.md [skip ci]" --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

      - name: Update the retype.yml file
        run: |
          version=$(grep -A2 'branding:' retype.yml | tail -n1); version=${version//*label: /}; echo "$version"; sed -i "s/$version/${{ steps.latest-release.outputs.tag }}/g" retype.yml;

      - name: Update the package.json file
        run: |
          version=$(echo "${{ steps.latest-release.outputs.tag }}" | sed 's/v//g'); sed -i 's/"version": *"[^"]*"/"version": "'$version'"/' package.json

      - name: commit version bump
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add -A
          git commit -m ":wrench: chore: bump version to ${{ steps.latest-release.outputs.tag }} [skip ci]" --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          git show-ref
          git pull --rebase origin main
          git push origin HEAD:main
